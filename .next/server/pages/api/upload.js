"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/upload";
exports.ids = ["pages/api/upload"];
exports.modules = {

/***/ "multer":
/*!*************************!*\
  !*** external "multer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("multer");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "@langchain/community/document_loaders/web/pdf":
/*!****************************************************************!*\
  !*** external "@langchain/community/document_loaders/web/pdf" ***!
  \****************************************************************/
/***/ ((module) => {

module.exports = import("@langchain/community/document_loaders/web/pdf");;

/***/ }),

/***/ "@langchain/google-genai":
/*!******************************************!*\
  !*** external "@langchain/google-genai" ***!
  \******************************************/
/***/ ((module) => {

module.exports = import("@langchain/google-genai");;

/***/ }),

/***/ "@langchain/qdrant":
/*!************************************!*\
  !*** external "@langchain/qdrant" ***!
  \************************************/
/***/ ((module) => {

module.exports = import("@langchain/qdrant");;

/***/ }),

/***/ "@langchain/textsplitters":
/*!*******************************************!*\
  !*** external "@langchain/textsplitters" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = import("@langchain/textsplitters");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\upload.js */ \"(api)/./pages/api/upload.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__]);\n_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/upload\",\n        pathname: \"/api/upload\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_upload_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVwbG9hZCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDdXBsb2FkLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ29EO0FBQ3BEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyxpREFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsaURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZ2VuYWktanMtMS8/Mzg1MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IGhvaXN0IH0gZnJvbSBcIm5leHQvZGlzdC9idWlsZC90ZW1wbGF0ZXMvaGVscGVyc1wiO1xuLy8gSW1wb3J0IHRoZSB1c2VybGFuZCBjb2RlLlxuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi4vcGFnZXNcXFxcYXBpXFxcXHVwbG9hZC5qc1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3VwbG9hZFwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/upload.js":
/*!*****************************!*\
  !*** ./pages/api/upload.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! multer */ \"multer\");\n/* harmony import */ var multer__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(multer__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _langchain_google_genai__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/google-genai */ \"@langchain/google-genai\");\n/* harmony import */ var _langchain_qdrant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/qdrant */ \"@langchain/qdrant\");\n/* harmony import */ var _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/textsplitters */ \"@langchain/textsplitters\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_langchain_google_genai__WEBPACK_IMPORTED_MODULE_1__, _langchain_qdrant__WEBPACK_IMPORTED_MODULE_2__, _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_3__]);\n([_langchain_google_genai__WEBPACK_IMPORTED_MODULE_1__, _langchain_qdrant__WEBPACK_IMPORTED_MODULE_2__, _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n// Configure multer for memory storage with size limits\nconst upload = multer__WEBPACK_IMPORTED_MODULE_0___default()({\n    storage: multer__WEBPACK_IMPORTED_MODULE_0___default().memoryStorage(),\n    limits: {\n        fileSize: 10 * 1024 * 1024\n    }\n});\n// Middleware to handle multipart/form-data\nfunction runMiddleware(req, res, fn) {\n    return new Promise((resolve, reject)=>{\n        fn(req, res, (result)=>{\n            if (result instanceof Error) {\n                return reject(result);\n            }\n            return resolve(result);\n        });\n    });\n}\n// Initialize Gemini Embeddings\nconst embeddings = new _langchain_google_genai__WEBPACK_IMPORTED_MODULE_1__.GoogleGenerativeAIEmbeddings({\n    apiKey: process.env.GOOGLE_API_KEY,\n    model: \"text-embedding-004\"\n});\nconst qdrantConfig = {\n    url: process.env.QDRANT_URL || \"http://localhost:6333\",\n    collectionName: \"chaicode-collection\"\n};\n// Function to get or create a vector store\nasync function getVectorStore() {\n    try {\n        const vectorStore = await _langchain_qdrant__WEBPACK_IMPORTED_MODULE_2__.QdrantVectorStore.fromExistingCollection(embeddings, qdrantConfig);\n        console.log(\"Connected to existing Qdrant collection\");\n        return vectorStore;\n    } catch (error) {\n        console.log(\"Collection does not exist, creating new one...\");\n        const vectorStore = await _langchain_qdrant__WEBPACK_IMPORTED_MODULE_2__.QdrantVectorStore.fromDocuments([], embeddings, qdrantConfig);\n        console.log(\"Created new Qdrant collection\");\n        return vectorStore;\n    }\n}\n// Helper function to process PDF files\nasync function processPDF(buffer, filename) {\n    try {\n        console.log(`Processing PDF: ${filename}`);\n        const blob = new Blob([\n            buffer\n        ], {\n            type: \"application/pdf\"\n        });\n        const file = new File([\n            blob\n        ], filename, {\n            type: \"application/pdf\"\n        });\n        const { WebPDFLoader } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! @langchain/community/document_loaders/web/pdf */ \"@langchain/community/document_loaders/web/pdf\"));\n        const loader = new WebPDFLoader(file);\n        const docs = await loader.load();\n        if (!docs || docs.length === 0) {\n            return [\n                {\n                    pageContent: `PDF file \"${filename}\" was processed but contains no extractable text. It may be an image-based PDF or contain only graphics.`,\n                    metadata: {\n                        source: filename,\n                        type: \"pdf\",\n                        note: \"No text content found\"\n                    }\n                }\n            ];\n        }\n        console.log(`Successfully extracted text from ${docs.length} pages`);\n        const fullText = docs.map((doc, index)=>`Page ${index + 1}:\\n${doc.pageContent}`).join(\"\\n\\n\");\n        return [\n            {\n                pageContent: fullText.trim(),\n                metadata: {\n                    source: filename,\n                    type: \"pdf\",\n                    pages: docs.length,\n                    extractedAt: new Date().toISOString()\n                }\n            }\n        ];\n    } catch (error) {\n        console.error(`Error processing PDF ${filename}:`, error);\n        return [\n            {\n                pageContent: `PDF file \"${filename}\" has been uploaded but automatic text extraction failed. \n\nTo use this PDF content:\n1. Open the PDF in a PDF reader\n2. Select all text (Ctrl+A) and copy it (Ctrl+C)\n3. Paste the text in the \"Text Input\" section below\n4. Click \"Add Text\" to add it to the knowledge base\n\nError details: ${error.message}`,\n                metadata: {\n                    source: filename,\n                    type: \"pdf\",\n                    error: error.message,\n                    note: \"Manual extraction required\"\n                }\n            }\n        ];\n    }\n}\n// Helper function to process text/CSV files\nfunction processTextFile(buffer, filename) {\n    const content = buffer.toString(\"utf-8\");\n    return [\n        {\n            pageContent: content,\n            metadata: {\n                source: filename\n            }\n        }\n    ];\n}\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        // Add timeout handling for Vercel\n        const timeout = setTimeout(()=>{\n            if (!res.headersSent) {\n                res.status(408).json({\n                    error: \"Request timeout. Please try with a smaller file.\"\n                });\n            }\n        }, 55000) // 55 seconds timeout\n        ;\n        // Run multer middleware\n        await runMiddleware(req, res, upload.single(\"file\"));\n        if (!req.file) {\n            clearTimeout(timeout);\n            return res.status(400).json({\n                error: \"No file uploaded.\"\n            });\n        }\n        const { buffer, mimetype, originalname } = req.file;\n        console.log(`Received file: ${originalname}, type: ${mimetype}`);\n        // Check file size for Vercel limits\n        if (buffer.length > 10 * 1024 * 1024) {\n            clearTimeout(timeout);\n            return res.status(400).json({\n                error: \"File too large. Maximum size is 10MB.\"\n            });\n        }\n        let docs;\n        if (mimetype === \"application/pdf\") {\n            docs = await processPDF(buffer, originalname);\n        } else if (mimetype === \"text/plain\" || mimetype === \"text/csv\") {\n            docs = processTextFile(buffer, originalname);\n        } else {\n            clearTimeout(timeout);\n            return res.status(400).json({\n                error: `Unsupported file type: ${mimetype}`\n            });\n        }\n        const textSplitter = new _langchain_textsplitters__WEBPACK_IMPORTED_MODULE_3__.RecursiveCharacterTextSplitter({\n            chunkSize: 1000,\n            chunkOverlap: 200\n        });\n        const splits = await textSplitter.splitDocuments(docs);\n        console.log(`Split into ${splits.length} chunks`);\n        const vectorStore = await getVectorStore();\n        await vectorStore.addDocuments(splits);\n        console.log(`Added ${splits.length} chunks to vector store`);\n        clearTimeout(timeout);\n        res.json({\n            message: `File '${originalname}' uploaded and processed successfully.`,\n            chunks: splits.length\n        });\n    } catch (error) {\n        console.error(\"Error processing file:\", error);\n        if (!res.headersSent) {\n            res.status(500).json({\n                error: \"Failed to process file.\",\n                details: error.message\n            });\n        }\n    }\n}\nconst config = {\n    api: {\n        bodyParser: false,\n        responseLimit: \"10mb\"\n    },\n    maxDuration: 60\n};\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/upload.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cupload.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();